@model Models.DependencyItem


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "dependencyItemChoice" }))
{
    <div class="modal-header">
        <a class="close" data-dismiss="modal" aria-hidden="true">&times;</a>
        <h4 class="modal-title">Adding Dependecy Item to Cluster</h4>
    </div>
        <div class="modal-body">
            @Html.AntiForgeryToken()
            <p id="MessageToClient" class="text-danger"></p>
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StartFactorGroupId)

                <div class="form-group">
                    @Html.LabelFor(model => model.EndFactorGroup.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndFactorGroup.Name, new
                   {
                       htmlAttributes = new
                       {
                           @class = "ui-autocomplete-input form-control jojo",
                           data_url = Url.Action("GetFactorGroupsForAutocomplete", "FactorGroup")
                       }
                   })
                        @Html.ValidationMessageFor(model => model.EndFactorGroup.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.EndFactorGroupId)


                <div class="form-group">
                    @Html.LabelFor(model => model.Matrix, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Matrix, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Matrix, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a class="btn btn-default" data-dissmiss="modal">Cancel</a>
            <input class="btn btn-primary" type="submit" value="Add" />
        </div>
}
